plugins {
    id 'textile-loom' version '0.5.1+build12'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
    maven {
        name = "Jitpack"
        url "https://jitpack.io/"
    }
    maven {
        name = "Concerning"
        url "https://maven.concern.i.ng/"
    }
    maven {
        name = "Classic Yarrn"
        url "https://dl.bintray.com/pheonixvx/classic-yarrn"
    }
}

dependencies {
    minecraft name: "c0.24_st_03", version: "c0.24_st_03"

    //mappings "net.textilemc:yarrn:inf-20100618+build20d353:v2"
    mappings files("yarn-c0.24_st_03+build21d021-v2-3.jar")

    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Some dependencies aren't gotten by the loader, so we add them ourselves
    implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.8.1'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.8.1'
    implementation 'com.google.guava:guava:28.0-jre'
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.6'
    implementation 'org.ow2.asm:asm:9.0'
    implementation 'org.ow2.asm:asm-analysis:9.0'
    implementation 'org.ow2.asm:asm-commons:9.0'
    implementation 'org.ow2.asm:asm-tree:9.0'
    implementation 'org.ow2.asm:asm-util:9.0'
    annotationProcessor group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.8.1'
    annotationProcessor group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.8.1'
}

configurations.all {
    resolutionStrategy {
        dependencySubstitution {
            substitute module('org.lwjgl.lwjgl:lwjgl_util:2.9.1-nightly-20130708-debug3') with module('org.lwjgl.lwjgl:lwjgl_util:2.9.4-nightly-20150209') 
            substitute module('org.lwjgl.lwjgl:lwjgl:2.9.1-nightly-20130708-debug3') with module('org.lwjgl.lwjgl:lwjgl:2.9.4-nightly-20150209')
        }
        force 'org.lwjgl.lwjgl:lwjgl-platform:2.9.4-nightly-20150209'
    }
}

minecraft {
    intermediaryUrl = {
        return "https://github.com/PheonixVX/trashcan/raw/main/intermediary-c0.24_st_03-intermediary-v2.jar"
    }
    customManifest = "https://gist.githubusercontent.com/PheonixVX/922467f0cbaa8cf6e0dd494f0afbff7e/raw/acdc0c76603aa3a94d6f20d571d05adfb8eaabee/c0.24_st_03.json"
    clientOnly = true
}

processResources {
    inputs.property "version", project.version

    from(sourceSets.main.resources.srcDirs) {
        include "fabric.mod.json"
        expand "version": project.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude "fabric.mod.json"
    }
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = "sources"
    from sourceSets.main.allSource
}
